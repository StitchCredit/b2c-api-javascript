/**
 * StitchCredit API
 * StitchCredit API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CodeDescription from './CodeDescription';
import PaymentHistoryYear from './PaymentHistoryYear';

/**
 * The CreditReportAccount model module.
 * @module model/CreditReportAccount
 * @version 1.0.0
 */
class CreditReportAccount {
    /**
     * Constructs a new <code>CreditReportAccount</code>.
     * @alias module:model/CreditReportAccount
     */
    constructor() { 
        
        CreditReportAccount.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreditReportAccount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreditReportAccount} obj Optional instance to populate.
     * @return {module:model/CreditReportAccount} The populated <code>CreditReportAccount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreditReportAccount();

            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('accountOpen')) {
                obj['accountOpen'] = ApiClient.convertToType(data['accountOpen'], 'Boolean');
            }
            if (data.hasOwnProperty('accountName')) {
                obj['accountName'] = ApiClient.convertToType(data['accountName'], 'String');
            }
            if (data.hasOwnProperty('contactInformation')) {
                obj['contactInformation'] = ApiClient.convertToType(data['contactInformation'], Object);
            }
            if (data.hasOwnProperty('accountNumber')) {
                obj['accountNumber'] = ApiClient.convertToType(data['accountNumber'], 'String');
            }
            if (data.hasOwnProperty('accountStatus')) {
                obj['accountStatus'] = ApiClient.convertToType(data['accountStatus'], 'String');
            }
            if (data.hasOwnProperty('paymentResponsibility')) {
                obj['paymentResponsibility'] = ApiClient.convertToType(data['paymentResponsibility'], 'String');
            }
            if (data.hasOwnProperty('highCreditAmount')) {
                obj['highCreditAmount'] = ApiClient.convertToType(data['highCreditAmount'], Object);
            }
            if (data.hasOwnProperty('accountType')) {
                obj['accountType'] = ApiClient.convertToType(data['accountType'], 'String');
            }
            if (data.hasOwnProperty('creditLimitAmount')) {
                obj['creditLimitAmount'] = ApiClient.convertToType(data['creditLimitAmount'], Object);
            }
            if (data.hasOwnProperty('termDurationMonths')) {
                obj['termDurationMonths'] = ApiClient.convertToType(data['termDurationMonths'], 'Number');
            }
            if (data.hasOwnProperty('termFrequency')) {
                obj['termFrequency'] = ApiClient.convertToType(data['termFrequency'], 'String');
            }
            if (data.hasOwnProperty('dateOpened')) {
                obj['dateOpened'] = ApiClient.convertToType(data['dateOpened'], 'Date');
            }
            if (data.hasOwnProperty('balanceAmount')) {
                obj['balanceAmount'] = ApiClient.convertToType(data['balanceAmount'], Object);
            }
            if (data.hasOwnProperty('reportedDate')) {
                obj['reportedDate'] = ApiClient.convertToType(data['reportedDate'], 'Date');
            }
            if (data.hasOwnProperty('pastDueAmount')) {
                obj['pastDueAmount'] = ApiClient.convertToType(data['pastDueAmount'], Object);
            }
            if (data.hasOwnProperty('lastPaymentDate')) {
                obj['lastPaymentDate'] = ApiClient.convertToType(data['lastPaymentDate'], 'Date');
            }
            if (data.hasOwnProperty('actualPayment')) {
                obj['actualPayment'] = ApiClient.convertToType(data['actualPayment'], Object);
            }
            if (data.hasOwnProperty('monthlyPayment')) {
                obj['monthlyPayment'] = ApiClient.convertToType(data['monthlyPayment'], Object);
            }
            if (data.hasOwnProperty('lastActivityDate')) {
                obj['lastActivityDate'] = ApiClient.convertToType(data['lastActivityDate'], 'Date');
            }
            if (data.hasOwnProperty('majorDelinquencyFirstReportedDate')) {
                obj['majorDelinquencyFirstReportedDate'] = ApiClient.convertToType(data['majorDelinquencyFirstReportedDate'], 'Date');
            }
            if (data.hasOwnProperty('monthsReviewed')) {
                obj['monthsReviewed'] = ApiClient.convertToType(data['monthsReviewed'], 'Number');
            }
            if (data.hasOwnProperty('creditorClassification')) {
                obj['creditorClassification'] = ApiClient.convertToType(data['creditorClassification'], 'String');
            }
            if (data.hasOwnProperty('activityDesignator')) {
                obj['activityDesignator'] = ApiClient.convertToType(data['activityDesignator'], 'String');
            }
            if (data.hasOwnProperty('chargeOffAmount')) {
                obj['chargeOffAmount'] = ApiClient.convertToType(data['chargeOffAmount'], Object);
            }
            if (data.hasOwnProperty('deferredPaymentStartDate')) {
                obj['deferredPaymentStartDate'] = ApiClient.convertToType(data['deferredPaymentStartDate'], 'Date');
            }
            if (data.hasOwnProperty('balloonPaymentAmount')) {
                obj['balloonPaymentAmount'] = ApiClient.convertToType(data['balloonPaymentAmount'], Object);
            }
            if (data.hasOwnProperty('balloonPaymentDate')) {
                obj['balloonPaymentDate'] = ApiClient.convertToType(data['balloonPaymentDate'], 'Date');
            }
            if (data.hasOwnProperty('dateClosed')) {
                obj['dateClosed'] = ApiClient.convertToType(data['dateClosed'], 'Date');
            }
            if (data.hasOwnProperty('loanType')) {
                obj['loanType'] = ApiClient.convertToType(data['loanType'], Object);
            }
            if (data.hasOwnProperty('firstDelinquencyDate')) {
                obj['firstDelinquencyDate'] = ApiClient.convertToType(data['firstDelinquencyDate'], 'Date');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], [CodeDescription]);
            }
            if (data.hasOwnProperty('paymentHistory')) {
                obj['paymentHistory'] = ApiClient.convertToType(data['paymentHistory'], [PaymentHistoryYear]);
            }
            if (data.hasOwnProperty('trendedDataHistory')) {
                obj['trendedDataHistory'] = ApiClient.convertToType(data['trendedDataHistory'], Object);
            }
            if (data.hasOwnProperty('isNegative')) {
                obj['isNegative'] = ApiClient.convertToType(data['isNegative'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/CreditReportAccount.ProviderEnum} provider
 */
CreditReportAccount.prototype['provider'] = undefined;

/**
 * @member {String} id
 */
CreditReportAccount.prototype['id'] = undefined;

/**
 * @member {Boolean} accountOpen
 */
CreditReportAccount.prototype['accountOpen'] = undefined;

/**
 * @member {String} accountName
 */
CreditReportAccount.prototype['accountName'] = undefined;

/**
 * @member {Object} contactInformation
 */
CreditReportAccount.prototype['contactInformation'] = undefined;

/**
 * @member {String} accountNumber
 */
CreditReportAccount.prototype['accountNumber'] = undefined;

/**
 * @member {module:model/CreditReportAccount.AccountStatusEnum} accountStatus
 */
CreditReportAccount.prototype['accountStatus'] = undefined;

/**
 * @member {module:model/CreditReportAccount.PaymentResponsibilityEnum} paymentResponsibility
 */
CreditReportAccount.prototype['paymentResponsibility'] = undefined;

/**
 * @member {Object} highCreditAmount
 */
CreditReportAccount.prototype['highCreditAmount'] = undefined;

/**
 * @member {module:model/CreditReportAccount.AccountTypeEnum} accountType
 */
CreditReportAccount.prototype['accountType'] = undefined;

/**
 * @member {Object} creditLimitAmount
 */
CreditReportAccount.prototype['creditLimitAmount'] = undefined;

/**
 * @member {Number} termDurationMonths
 */
CreditReportAccount.prototype['termDurationMonths'] = undefined;

/**
 * @member {String} termFrequency
 */
CreditReportAccount.prototype['termFrequency'] = undefined;

/**
 * @member {Date} dateOpened
 */
CreditReportAccount.prototype['dateOpened'] = undefined;

/**
 * @member {Object} balanceAmount
 */
CreditReportAccount.prototype['balanceAmount'] = undefined;

/**
 * @member {Date} reportedDate
 */
CreditReportAccount.prototype['reportedDate'] = undefined;

/**
 * @member {Object} pastDueAmount
 */
CreditReportAccount.prototype['pastDueAmount'] = undefined;

/**
 * @member {Date} lastPaymentDate
 */
CreditReportAccount.prototype['lastPaymentDate'] = undefined;

/**
 * @member {Object} actualPayment
 */
CreditReportAccount.prototype['actualPayment'] = undefined;

/**
 * @member {Object} monthlyPayment
 */
CreditReportAccount.prototype['monthlyPayment'] = undefined;

/**
 * @member {Date} lastActivityDate
 */
CreditReportAccount.prototype['lastActivityDate'] = undefined;

/**
 * @member {Date} majorDelinquencyFirstReportedDate
 */
CreditReportAccount.prototype['majorDelinquencyFirstReportedDate'] = undefined;

/**
 * @member {Number} monthsReviewed
 */
CreditReportAccount.prototype['monthsReviewed'] = undefined;

/**
 * @member {module:model/CreditReportAccount.CreditorClassificationEnum} creditorClassification
 */
CreditReportAccount.prototype['creditorClassification'] = undefined;

/**
 * @member {module:model/CreditReportAccount.ActivityDesignatorEnum} activityDesignator
 */
CreditReportAccount.prototype['activityDesignator'] = undefined;

/**
 * @member {Object} chargeOffAmount
 */
CreditReportAccount.prototype['chargeOffAmount'] = undefined;

/**
 * @member {Date} deferredPaymentStartDate
 */
CreditReportAccount.prototype['deferredPaymentStartDate'] = undefined;

/**
 * @member {Object} balloonPaymentAmount
 */
CreditReportAccount.prototype['balloonPaymentAmount'] = undefined;

/**
 * @member {Date} balloonPaymentDate
 */
CreditReportAccount.prototype['balloonPaymentDate'] = undefined;

/**
 * @member {Date} dateClosed
 */
CreditReportAccount.prototype['dateClosed'] = undefined;

/**
 * @member {Object} loanType
 */
CreditReportAccount.prototype['loanType'] = undefined;

/**
 * @member {Date} firstDelinquencyDate
 */
CreditReportAccount.prototype['firstDelinquencyDate'] = undefined;

/**
 * @member {Array.<module:model/CodeDescription>} comments
 */
CreditReportAccount.prototype['comments'] = undefined;

/**
 * @member {Array.<module:model/PaymentHistoryYear>} paymentHistory
 */
CreditReportAccount.prototype['paymentHistory'] = undefined;

/**
 * @member {Object} trendedDataHistory
 */
CreditReportAccount.prototype['trendedDataHistory'] = undefined;

/**
 * @member {Boolean} isNegative
 */
CreditReportAccount.prototype['isNegative'] = undefined;





/**
 * Allowed values for the <code>provider</code> property.
 * @enum {String}
 * @readonly
 */
CreditReportAccount['ProviderEnum'] = {

    /**
     * value: "EFX"
     * @const
     */
    "EFX": "EFX",

    /**
     * value: "TU"
     * @const
     */
    "TU": "TU",

    /**
     * value: "EXP"
     * @const
     */
    "EXP": "EXP",

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN"
};


/**
 * Allowed values for the <code>accountStatus</code> property.
 * @enum {String}
 * @readonly
 */
CreditReportAccount['AccountStatusEnum'] = {

    /**
     * value: "BANKRUPTCY_OR_WAGE_EARNER_PLAN"
     * @const
     */
    "BANKRUPTCY_OR_WAGE_EARNER_PLAN": "BANKRUPTCY_OR_WAGE_EARNER_PLAN",

    /**
     * value: "COLLECTION_OR_CHARGEOFF"
     * @const
     */
    "COLLECTION_OR_CHARGEOFF": "COLLECTION_OR_CHARGEOFF",

    /**
     * value: "FORECLOSURE"
     * @const
     */
    "FORECLOSURE": "FORECLOSURE",

    /**
     * value: "FORECLOSURE_OR_REPOSSESSION"
     * @const
     */
    "FORECLOSURE_OR_REPOSSESSION": "FORECLOSURE_OR_REPOSSESSION",

    /**
     * value: "LATE_30_DAYS"
     * @const
     */
    "LATE_30_DAYS": "LATE_30_DAYS",

    /**
     * value: "LATE_60_DAYS"
     * @const
     */
    "LATE_60_DAYS": "LATE_60_DAYS",

    /**
     * value: "LATE_90_DAYS"
     * @const
     */
    "LATE_90_DAYS": "LATE_90_DAYS",

    /**
     * value: "WAGE_EARNER_PLAN"
     * @const
     */
    "WAGE_EARNER_PLAN": "WAGE_EARNER_PLAN",

    /**
     * value: "TOO_NEW_TO_RATE"
     * @const
     */
    "TOO_NEW_TO_RATE": "TOO_NEW_TO_RATE",

    /**
     * value: "PAYS_AS_AGREED"
     * @const
     */
    "PAYS_AS_AGREED": "PAYS_AS_AGREED",

    /**
     * value: "NOT_MORE_THAN_TWO_PAYMENTS_PAST_DUE"
     * @const
     */
    "NOT_MORE_THAN_TWO_PAYMENTS_PAST_DUE": "NOT_MORE_THAN_TWO_PAYMENTS_PAST_DUE",

    /**
     * value: "NOT_MORE_THAN_THREE_PAYMENTS_PAST_DUE"
     * @const
     */
    "NOT_MORE_THAN_THREE_PAYMENTS_PAST_DUE": "NOT_MORE_THAN_THREE_PAYMENTS_PAST_DUE",

    /**
     * value: "NOT_MORE_THAN_FOUR_PAYMENTS_PAST_DUE"
     * @const
     */
    "NOT_MORE_THAN_FOUR_PAYMENTS_PAST_DUE": "NOT_MORE_THAN_FOUR_PAYMENTS_PAST_DUE",

    /**
     * value: "OVER_120_DAYS_PAST_DUE"
     * @const
     */
    "OVER_120_DAYS_PAST_DUE": "OVER_120_DAYS_PAST_DUE",

    /**
     * value: "COLLECTION"
     * @const
     */
    "COLLECTION": "COLLECTION",

    /**
     * value: "INCLUDED_IN_CHAPTER_13"
     * @const
     */
    "INCLUDED_IN_CHAPTER_13": "INCLUDED_IN_CHAPTER_13",

    /**
     * value: "REPOSSESSION"
     * @const
     */
    "REPOSSESSION": "REPOSSESSION",

    /**
     * value: "CHARGE_OFF"
     * @const
     */
    "CHARGE_OFF": "CHARGE_OFF",

    /**
     * value: "ZERO_BALANCE_AND_CURRENT_ACCOUNT"
     * @const
     */
    "ZERO_BALANCE_AND_CURRENT_ACCOUNT": "ZERO_BALANCE_AND_CURRENT_ACCOUNT",

    /**
     * value: "NO_RATE_REPORTED"
     * @const
     */
    "NO_RATE_REPORTED": "NO_RATE_REPORTED",

    /**
     * value: "ACCOUNT_INACTIVE"
     * @const
     */
    "ACCOUNT_INACTIVE": "ACCOUNT_INACTIVE",

    /**
     * value: "LOST_OR_STOLEN_CARD"
     * @const
     */
    "LOST_OR_STOLEN_CARD": "LOST_OR_STOLEN_CARD",

    /**
     * value: "CONTACT_MEMBER_FOR_STATUS"
     * @const
     */
    "CONTACT_MEMBER_FOR_STATUS": "CONTACT_MEMBER_FOR_STATUS",

    /**
     * value: "REFINANCED_OR_RENEWED"
     * @const
     */
    "REFINANCED_OR_RENEWED": "REFINANCED_OR_RENEWED",

    /**
     * value: "CONSUMER_DECEASED"
     * @const
     */
    "CONSUMER_DECEASED": "CONSUMER_DECEASED",

    /**
     * value: "IN_FINANCIAL_COUNSELING"
     * @const
     */
    "IN_FINANCIAL_COUNSELING": "IN_FINANCIAL_COUNSELING",

    /**
     * value: "FORECLOSURE_PROCESS_STARTED"
     * @const
     */
    "FORECLOSURE_PROCESS_STARTED": "FORECLOSURE_PROCESS_STARTED",

    /**
     * value: "IN_WEP"
     * @const
     */
    "IN_WEP": "IN_WEP",

    /**
     * value: "ADJUSTMENT_PENDING"
     * @const
     */
    "ADJUSTMENT_PENDING": "ADJUSTMENT_PENDING",

    /**
     * value: "DISPUTE_RESOLUTION_PENDING"
     * @const
     */
    "DISPUTE_RESOLUTION_PENDING": "DISPUTE_RESOLUTION_PENDING",

    /**
     * value: "INCLUDED_IN_BANKRUPTCY"
     * @const
     */
    "INCLUDED_IN_BANKRUPTCY": "INCLUDED_IN_BANKRUPTCY",

    /**
     * value: "IN_BK"
     * @const
     */
    "IN_BK": "IN_BK",

    /**
     * value: "ASSIGNED_TO_US_DEPT_OF_ED"
     * @const
     */
    "ASSIGNED_TO_US_DEPT_OF_ED": "ASSIGNED_TO_US_DEPT_OF_ED",

    /**
     * value: "UNAVAILABLE"
     * @const
     */
    "UNAVAILABLE": "UNAVAILABLE"
};


/**
 * Allowed values for the <code>paymentResponsibility</code> property.
 * @enum {String}
 * @readonly
 */
CreditReportAccount['PaymentResponsibilityEnum'] = {

    /**
     * value: "INDIVIDUAL"
     * @const
     */
    "INDIVIDUAL": "INDIVIDUAL",

    /**
     * value: "JOINT_CONTRACTUAL_LIABILITY"
     * @const
     */
    "JOINT_CONTRACTUAL_LIABILITY": "JOINT_CONTRACTUAL_LIABILITY",

    /**
     * value: "SHARED"
     * @const
     */
    "SHARED": "SHARED",

    /**
     * value: "UNDESIGNATED"
     * @const
     */
    "UNDESIGNATED": "UNDESIGNATED"
};


/**
 * Allowed values for the <code>accountType</code> property.
 * @enum {String}
 * @readonly
 */
CreditReportAccount['AccountTypeEnum'] = {

    /**
     * value: "REVOLVING"
     * @const
     */
    "REVOLVING": "REVOLVING",

    /**
     * value: "MORTGAGE"
     * @const
     */
    "MORTGAGE": "MORTGAGE",

    /**
     * value: "INSTALLMENT"
     * @const
     */
    "INSTALLMENT": "INSTALLMENT",

    /**
     * value: "OTHER"
     * @const
     */
    "OTHER": "OTHER"
};


/**
 * Allowed values for the <code>creditorClassification</code> property.
 * @enum {String}
 * @readonly
 */
CreditReportAccount['CreditorClassificationEnum'] = {

    /**
     * value: "ADVERTISING"
     * @const
     */
    "ADVERTISING": "ADVERTISING",

    /**
     * value: "CLOTHING"
     * @const
     */
    "CLOTHING": "CLOTHING",

    /**
     * value: "COLLECTION_SERVICES"
     * @const
     */
    "COLLECTION_SERVICES": "COLLECTION_SERVICES",

    /**
     * value: "CONTRACTORS"
     * @const
     */
    "CONTRACTORS": "CONTRACTORS",

    /**
     * value: "DEPARTMENT_AND_MAIL_ORDER"
     * @const
     */
    "DEPARTMENT_AND_MAIL_ORDER": "DEPARTMENT_AND_MAIL_ORDER",

    /**
     * value: "EMPLOYMENT"
     * @const
     */
    "EMPLOYMENT": "EMPLOYMENT",

    /**
     * value: "FARM_AND_GARDEN_SUPPLIES"
     * @const
     */
    "FARM_AND_GARDEN_SUPPLIES": "FARM_AND_GARDEN_SUPPLIES",

    /**
     * value: "FINANCE"
     * @const
     */
    "FINANCE": "FINANCE",

    /**
     * value: "GROCERY"
     * @const
     */
    "GROCERY": "GROCERY",

    /**
     * value: "HOME_FURNISHING"
     * @const
     */
    "HOME_FURNISHING": "HOME_FURNISHING",

    /**
     * value: "JEWELRY_AND_CAMERA"
     * @const
     */
    "JEWELRY_AND_CAMERA": "JEWELRY_AND_CAMERA",

    /**
     * value: "LUMBER_AND_HARDWARE"
     * @const
     */
    "LUMBER_AND_HARDWARE": "LUMBER_AND_HARDWARE",

    /**
     * value: "MEDICAL_AND_HEALTH"
     * @const
     */
    "MEDICAL_AND_HEALTH": "MEDICAL_AND_HEALTH",

    /**
     * value: "MISCELLANEOUS_AND_PUBLIC_RECORD"
     * @const
     */
    "MISCELLANEOUS_AND_PUBLIC_RECORD": "MISCELLANEOUS_AND_PUBLIC_RECORD",

    /**
     * value: "OIL_AND_NATIONAL_CREDIT_CARDS"
     * @const
     */
    "OIL_AND_NATIONAL_CREDIT_CARDS": "OIL_AND_NATIONAL_CREDIT_CARDS",

    /**
     * value: "PERSONAL_SERVICES_NOT_MEDICAL"
     * @const
     */
    "PERSONAL_SERVICES_NOT_MEDICAL": "PERSONAL_SERVICES_NOT_MEDICAL",

    /**
     * value: "REAL_ESTATE_AND_PUBLIC_ACCOMMODATION"
     * @const
     */
    "REAL_ESTATE_AND_PUBLIC_ACCOMMODATION": "REAL_ESTATE_AND_PUBLIC_ACCOMMODATION",

    /**
     * value: "SPORTING_GOODS"
     * @const
     */
    "SPORTING_GOODS": "SPORTING_GOODS",

    /**
     * value: "UTILITIES_AND_FUEL"
     * @const
     */
    "UTILITIES_AND_FUEL": "UTILITIES_AND_FUEL",

    /**
     * value: "WHOLESALE"
     * @const
     */
    "WHOLESALE": "WHOLESALE",

    /**
     * value: "AUTOMOTIVE"
     * @const
     */
    "AUTOMOTIVE": "AUTOMOTIVE",

    /**
     * value: "BANKING"
     * @const
     */
    "BANKING": "BANKING",

    /**
     * value: "CABLE_OR_CELLULAR"
     * @const
     */
    "CABLE_OR_CELLULAR": "CABLE_OR_CELLULAR",

    /**
     * value: "CHECK_GUARANTEE"
     * @const
     */
    "CHECK_GUARANTEE": "CHECK_GUARANTEE",

    /**
     * value: "CREDIT_UNION"
     * @const
     */
    "CREDIT_UNION": "CREDIT_UNION",

    /**
     * value: "EDUCATIONAL"
     * @const
     */
    "EDUCATIONAL": "EDUCATIONAL",

    /**
     * value: "FINANCIAL"
     * @const
     */
    "FINANCIAL": "FINANCIAL",

    /**
     * value: "GOVERNMENT"
     * @const
     */
    "GOVERNMENT": "GOVERNMENT",

    /**
     * value: "INSURANCE"
     * @const
     */
    "INSURANCE": "INSURANCE",

    /**
     * value: "MEDICAL_OR_HEALTH_CARE"
     * @const
     */
    "MEDICAL_OR_HEALTH_CARE": "MEDICAL_OR_HEALTH_CARE",

    /**
     * value: "OIL_COMPANY"
     * @const
     */
    "OIL_COMPANY": "OIL_COMPANY",

    /**
     * value: "PERSONAL_SERVICES"
     * @const
     */
    "PERSONAL_SERVICES": "PERSONAL_SERVICES",

    /**
     * value: "RENTAL_OR_LEASING"
     * @const
     */
    "RENTAL_OR_LEASING": "RENTAL_OR_LEASING",

    /**
     * value: "RETAIL"
     * @const
     */
    "RETAIL": "RETAIL",

    /**
     * value: "UTILITIES"
     * @const
     */
    "UTILITIES": "UTILITIES",

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN"
};


/**
 * Allowed values for the <code>activityDesignator</code> property.
 * @enum {String}
 * @readonly
 */
CreditReportAccount['ActivityDesignatorEnum'] = {

    /**
     * value: "CLOSED"
     * @const
     */
    "CLOSED": "CLOSED",

    /**
     * value: "DEFAULT"
     * @const
     */
    "DEFAULT": "DEFAULT",

    /**
     * value: "FROZEN"
     * @const
     */
    "FROZEN": "FROZEN",

    /**
     * value: "LOST_OR_STOLEN"
     * @const
     */
    "LOST_OR_STOLEN": "LOST_OR_STOLEN",

    /**
     * value: "OPEN"
     * @const
     */
    "OPEN": "OPEN",

    /**
     * value: "PAID"
     * @const
     */
    "PAID": "PAID",

    /**
     * value: "PAID_AND_CLOSED"
     * @const
     */
    "PAID_AND_CLOSED": "PAID_AND_CLOSED",

    /**
     * value: "REFINANCED"
     * @const
     */
    "REFINANCED": "REFINANCED",

    /**
     * value: "TRANSFER_OR_SOLD"
     * @const
     */
    "TRANSFER_OR_SOLD": "TRANSFER_OR_SOLD",

    /**
     * value: "TRANSFER_OR_SOLD_OR_PAID"
     * @const
     */
    "TRANSFER_OR_SOLD_OR_PAID": "TRANSFER_OR_SOLD_OR_PAID",

    /**
     * value: "TRANSFERRED"
     * @const
     */
    "TRANSFERRED": "TRANSFERRED",

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN"
};



export default CreditReportAccount;

