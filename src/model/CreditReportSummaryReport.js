/**
 * StitchCredit API
 * StitchCredit API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreditReportProviderDisputeInformationReport from './CreditReportProviderDisputeInformationReport';
import CreditReportSummaryAccountsReport from './CreditReportSummaryAccountsReport';
import CreditScoreReport from './CreditScoreReport';
import PersonSubjectReport from './PersonSubjectReport';

/**
 * The CreditReportSummaryReport model module.
 * @module model/CreditReportSummaryReport
 * @version 1.0.1
 */
class CreditReportSummaryReport {
    /**
     * Constructs a new <code>CreditReportSummaryReport</code>.
     * @alias module:model/CreditReportSummaryReport
     */
    constructor() { 
        
        CreditReportSummaryReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreditReportSummaryReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreditReportSummaryReport} obj Optional instance to populate.
     * @return {module:model/CreditReportSummaryReport} The populated <code>CreditReportSummaryReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreditReportSummaryReport();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('reportGenerated')) {
                obj['reportGenerated'] = ApiClient.convertToType(data['reportGenerated'], 'Date');
            }
            if (data.hasOwnProperty('creditFileSecurityFreezeFlag')) {
                obj['creditFileSecurityFreezeFlag'] = ApiClient.convertToType(data['creditFileSecurityFreezeFlag'], 'Boolean');
            }
            if (data.hasOwnProperty('reportType')) {
                obj['reportType'] = ApiClient.convertToType(data['reportType'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = PersonSubjectReport.constructFromObject(data['subject']);
            }
            if (data.hasOwnProperty('creditScore')) {
                obj['creditScore'] = CreditScoreReport.constructFromObject(data['creditScore']);
            }
            if (data.hasOwnProperty('revolvingAccounts')) {
                obj['revolvingAccounts'] = CreditReportSummaryAccountsReport.constructFromObject(data['revolvingAccounts']);
            }
            if (data.hasOwnProperty('mortgageAccounts')) {
                obj['mortgageAccounts'] = CreditReportSummaryAccountsReport.constructFromObject(data['mortgageAccounts']);
            }
            if (data.hasOwnProperty('installmentAccounts')) {
                obj['installmentAccounts'] = CreditReportSummaryAccountsReport.constructFromObject(data['installmentAccounts']);
            }
            if (data.hasOwnProperty('otherAccounts')) {
                obj['otherAccounts'] = CreditReportSummaryAccountsReport.constructFromObject(data['otherAccounts']);
            }
            if (data.hasOwnProperty('totalOpenAccounts')) {
                obj['totalOpenAccounts'] = CreditReportSummaryAccountsReport.constructFromObject(data['totalOpenAccounts']);
            }
            if (data.hasOwnProperty('lengthOfCreditHistoryMonths')) {
                obj['lengthOfCreditHistoryMonths'] = ApiClient.convertToType(data['lengthOfCreditHistoryMonths'], 'Number');
            }
            if (data.hasOwnProperty('totalNegativeAccounts')) {
                obj['totalNegativeAccounts'] = ApiClient.convertToType(data['totalNegativeAccounts'], 'Number');
            }
            if (data.hasOwnProperty('averageAccountAgeMonths')) {
                obj['averageAccountAgeMonths'] = ApiClient.convertToType(data['averageAccountAgeMonths'], 'Number');
            }
            if (data.hasOwnProperty('oldestAccountOpenDate')) {
                obj['oldestAccountOpenDate'] = ApiClient.convertToType(data['oldestAccountOpenDate'], 'Date');
            }
            if (data.hasOwnProperty('oldestAccountName')) {
                obj['oldestAccountName'] = ApiClient.convertToType(data['oldestAccountName'], 'String');
            }
            if (data.hasOwnProperty('mostRecentAccountOpenDate')) {
                obj['mostRecentAccountOpenDate'] = ApiClient.convertToType(data['mostRecentAccountOpenDate'], 'Date');
            }
            if (data.hasOwnProperty('mostRecentAccountName')) {
                obj['mostRecentAccountName'] = ApiClient.convertToType(data['mostRecentAccountName'], 'String');
            }
            if (data.hasOwnProperty('totalConsumerStatements')) {
                obj['totalConsumerStatements'] = ApiClient.convertToType(data['totalConsumerStatements'], 'Number');
            }
            if (data.hasOwnProperty('mostRecentInquiryDate')) {
                obj['mostRecentInquiryDate'] = ApiClient.convertToType(data['mostRecentInquiryDate'], 'Date');
            }
            if (data.hasOwnProperty('mostRecentInquiryName')) {
                obj['mostRecentInquiryName'] = ApiClient.convertToType(data['mostRecentInquiryName'], 'String');
            }
            if (data.hasOwnProperty('totalPersonalInformation')) {
                obj['totalPersonalInformation'] = ApiClient.convertToType(data['totalPersonalInformation'], 'Number');
            }
            if (data.hasOwnProperty('totalInquires')) {
                obj['totalInquires'] = ApiClient.convertToType(data['totalInquires'], 'Number');
            }
            if (data.hasOwnProperty('totalPublicRecords')) {
                obj['totalPublicRecords'] = ApiClient.convertToType(data['totalPublicRecords'], 'Number');
            }
            if (data.hasOwnProperty('totalCollections')) {
                obj['totalCollections'] = ApiClient.convertToType(data['totalCollections'], 'Number');
            }
            if (data.hasOwnProperty('disputeInformation')) {
                obj['disputeInformation'] = CreditReportProviderDisputeInformationReport.constructFromObject(data['disputeInformation']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
CreditReportSummaryReport.prototype['id'] = undefined;

/**
 * @member {Date} reportGenerated
 */
CreditReportSummaryReport.prototype['reportGenerated'] = undefined;

/**
 * @member {Boolean} creditFileSecurityFreezeFlag
 */
CreditReportSummaryReport.prototype['creditFileSecurityFreezeFlag'] = undefined;

/**
 * @member {module:model/CreditReportSummaryReport.ReportTypeEnum} reportType
 */
CreditReportSummaryReport.prototype['reportType'] = undefined;

/**
 * @member {module:model/CreditReportSummaryReport.ProviderEnum} provider
 */
CreditReportSummaryReport.prototype['provider'] = undefined;

/**
 * @member {module:model/PersonSubjectReport} subject
 */
CreditReportSummaryReport.prototype['subject'] = undefined;

/**
 * @member {module:model/CreditScoreReport} creditScore
 */
CreditReportSummaryReport.prototype['creditScore'] = undefined;

/**
 * @member {module:model/CreditReportSummaryAccountsReport} revolvingAccounts
 */
CreditReportSummaryReport.prototype['revolvingAccounts'] = undefined;

/**
 * @member {module:model/CreditReportSummaryAccountsReport} mortgageAccounts
 */
CreditReportSummaryReport.prototype['mortgageAccounts'] = undefined;

/**
 * @member {module:model/CreditReportSummaryAccountsReport} installmentAccounts
 */
CreditReportSummaryReport.prototype['installmentAccounts'] = undefined;

/**
 * @member {module:model/CreditReportSummaryAccountsReport} otherAccounts
 */
CreditReportSummaryReport.prototype['otherAccounts'] = undefined;

/**
 * @member {module:model/CreditReportSummaryAccountsReport} totalOpenAccounts
 */
CreditReportSummaryReport.prototype['totalOpenAccounts'] = undefined;

/**
 * @member {Number} lengthOfCreditHistoryMonths
 */
CreditReportSummaryReport.prototype['lengthOfCreditHistoryMonths'] = undefined;

/**
 * @member {Number} totalNegativeAccounts
 */
CreditReportSummaryReport.prototype['totalNegativeAccounts'] = undefined;

/**
 * @member {Number} averageAccountAgeMonths
 */
CreditReportSummaryReport.prototype['averageAccountAgeMonths'] = undefined;

/**
 * @member {Date} oldestAccountOpenDate
 */
CreditReportSummaryReport.prototype['oldestAccountOpenDate'] = undefined;

/**
 * @member {String} oldestAccountName
 */
CreditReportSummaryReport.prototype['oldestAccountName'] = undefined;

/**
 * @member {Date} mostRecentAccountOpenDate
 */
CreditReportSummaryReport.prototype['mostRecentAccountOpenDate'] = undefined;

/**
 * @member {String} mostRecentAccountName
 */
CreditReportSummaryReport.prototype['mostRecentAccountName'] = undefined;

/**
 * @member {Number} totalConsumerStatements
 */
CreditReportSummaryReport.prototype['totalConsumerStatements'] = undefined;

/**
 * @member {Date} mostRecentInquiryDate
 */
CreditReportSummaryReport.prototype['mostRecentInquiryDate'] = undefined;

/**
 * @member {String} mostRecentInquiryName
 */
CreditReportSummaryReport.prototype['mostRecentInquiryName'] = undefined;

/**
 * @member {Number} totalPersonalInformation
 */
CreditReportSummaryReport.prototype['totalPersonalInformation'] = undefined;

/**
 * @member {Number} totalInquires
 */
CreditReportSummaryReport.prototype['totalInquires'] = undefined;

/**
 * @member {Number} totalPublicRecords
 */
CreditReportSummaryReport.prototype['totalPublicRecords'] = undefined;

/**
 * @member {Number} totalCollections
 */
CreditReportSummaryReport.prototype['totalCollections'] = undefined;

/**
 * @member {module:model/CreditReportProviderDisputeInformationReport} disputeInformation
 */
CreditReportSummaryReport.prototype['disputeInformation'] = undefined;





/**
 * Allowed values for the <code>reportType</code> property.
 * @enum {String}
 * @readonly
 */
CreditReportSummaryReport['ReportTypeEnum'] = {

    /**
     * value: "US_EFX"
     * @const
     */
    "EFX": "US_EFX",

    /**
     * value: "US_3B"
     * @const
     */
    "3B": "US_3B"
};


/**
 * Allowed values for the <code>provider</code> property.
 * @enum {String}
 * @readonly
 */
CreditReportSummaryReport['ProviderEnum'] = {

    /**
     * value: "EFX"
     * @const
     */
    "EFX": "EFX",

    /**
     * value: "TU"
     * @const
     */
    "TU": "TU",

    /**
     * value: "EXP"
     * @const
     */
    "EXP": "EXP",

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN"
};



export default CreditReportSummaryReport;

